/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/NafgWrUpbO1
 */
import Link from 'next/link';
import { Button } from '@/components/ui/button';
import {
  DropdownMenuTrigger,
  DropdownMenuItem,
  DropdownMenuSeparator,
  DropdownMenuContent,
  DropdownMenu,
} from '@/components/ui/dropdown-menu';
import { useMsal } from '@azure/msal-react';
import { useEffect, useState } from 'react';
import { Client } from '@microsoft/microsoft-graph-client';

interface NavbarProps {
  isLoggedIn: boolean;
}

export function Navbar({ isLoggedIn }: NavbarProps) {
  const { instance, accounts } = useMsal();
  const [profilePicture, setProfilePicture] = useState('');

  useEffect(() => {
    const fetchProfilePicture = async () => {
      if (accounts.length === 0) return;

      const accessToken = await instance.acquireTokenSilent({
        scopes: ['User.Read'],
        account: accounts[0],
      });

      const client = Client.init({
        authProvider: (done) => {
          done(null, accessToken.accessToken);
        },
      });

      try {
        const response = await client.api('/me/photo/$value').get();
        const blob = await response.blob();
        const imageUrl = URL.createObjectURL(blob);
        setProfilePicture(imageUrl);
      } catch (error) {
        console.error('Error fetching profile picture:', error);
      }
    };

    if (isLoggedIn) {
      fetchProfilePicture();
    }
  }, [isLoggedIn, accounts, instance]);

  const handleLogout = () => {
    instance.logoutRedirect({
      postLogoutRedirectUri: '/', // Replace with your desired logout redirect URL
    });
  };

  return (
    <nav className="flex items-center h-14 px-4 border-b gap-4 w-full md:px-6">
      <div className="flex items-center gap-4 lg:gap-8">
        <Link className="text-lg font-bold" href="#">
          Pest Control Management System
        </Link>
      </div>
      {isLoggedIn && (
        <div className="flex items-center ml-auto space-x-4">
          <Button size="icon" variant="outline">
            <SearchIcon className="h-4 w-4" />
            <span className="sr-only">Search</span>
          </Button>
          <Button size="icon" variant="outline">
            <BellIcon className="h-4 w-4" />
            <span className="sr-only">Notifications</span>
          </Button>
          <DropdownMenu>
            <DropdownMenuTrigger asChild>
              <Button className="w-8 h-8 rounded-full" size="icon" variant="outline">
                <img
                  alt="User Profile"
                  className="rounded-full"
                  height="32"
                  src={profilePicture || '/placeholder.svg'}
                  style={{
                    aspectRatio: '32/32',
                    objectFit: 'cover',
                  }}
                  width="32"
                />
                <span className="sr-only">Toggle user menu</span>
              </Button>
            </DropdownMenuTrigger>
            <DropdownMenuContent align="end">
              <DropdownMenuItem>My Account</DropdownMenuItem>
              <DropdownMenuItem>Settings</DropdownMenuItem>
              <DropdownMenuSeparator />
              <DropdownMenuItem onClick={handleLogout}>Logout</DropdownMenuItem>
            </DropdownMenuContent>
          </DropdownMenu>
        </div>
      )}
    </nav>
  );
}

function SearchIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="11" cy="11" r="8" />
      <path d="m21 21-4.3-4.3" />
    </svg>
  );
}

function BellIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9" />
      <path d="M10.3 21a1.94 1.94 0 0 0 3.4 0" />
    </svg>
  );
}
